buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.7.5'
    }
}

plugins {
    id 'java'
    id "co.uzzu.dotenv.gradle" version "4.0.0"
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '9.21.0'
}

group = 'ru.nsu.crpo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

flyway {
    url = "jdbc:postgresql://${env.fetch('AUTH_PG_HOST')}:${env.fetch('AUTH_PG_PORT')}/${env.fetch('AUTH_PG_DATABASE')}"
    user = env.fetch('AUTH_PG_USER')
    password = env.fetch('AUTH_PG_PASSWORD')
    locations = ['classpath:/migrations']
    schemas = ['public']
    cleanDisabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.nimbusds:nimbus-jose-jwt:10.0.2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.google.guava:guava:33.4.0-jre'

    implementation 'org.postgresql:postgresql:42.7.5'

    implementation 'org.mapstruct:mapstruct:1.6.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}
